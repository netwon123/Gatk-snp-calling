library(ggplot2)
library(viridis)
setwd('G:/博士/泛基因组组/PGG-project/01_analysis/01_SV stats/12_SV_density/03_vis_allgenome/')
chr<-read.table("chr.bed",sep="\t",header=F)
colnames(chr)=c('Chromosome', 'chromStart', 'chromEnd')
chr2=data.frame(chr$chromStart,chr$chromEnd)
xlim=as.matrix(chr2)
#------------chr------------------
circos.clear()

circos.initialize(factors=chr$Chromosome,xlim=xlim)
circos.track(ylim=c(0,1),panel.fun=function(x,y) {
  chr=CELL_META$sector.index
  xlim=CELL_META$xlim
  ylim=CELL_META$ylim
  circos.text(mean(xlim),mean(ylim),chr,cex=0.5,col="grey40",
              facing="bending.inside",niceFacing=TRUE)
},bg.col="grey90",bg.border=F,track.height=0.07)
# genomes x axis (Mb)
brk <- c(50,100,150,200,250,300)*10^6

circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
  circos.axis(h="top",major.at=brk,labels=round(brk/10^6,1),labels.col="grey40",lwd=0.7,labels.cex=0.4)})

#--------------------read the denesity----------

ins<-read.table("ins_num.txt",sep="\t",header=F)
del<-read.table("del_num.txt",sep="\t",header=F)
dup<-read.table("dup_num.txt",sep="\t",header=F)
inv<-read.table("inv_num.txt",sep="\t",header=F)
bnd<-read.table("bnd_num.txt",sep="\t",header=F)
gene<-read.table("gene_num.txt",sep="\t",header=F)
gene<-ins[,c(1,2,3,4)]
colnames(gene)<-c("Chr","X","Y",'denesity')
ins<-ins[,c(1,2,3,4)]
colnames(ins)<-c("Chr","X","Y",'denesity')
del<-del[,c(1,2,3,4)]
colnames(del)<-c("Chr","X","Y",'denesity')
dup<-dup[,c(1,2,3,4)]
colnames(dup)<-c("Chr","X","Y",'denesity')
inv<-inv[,c(1,2,3,4)]
colnames(inv)<-c("Chr","X","Y",'denesity')
bnd<-bnd[,c(1,2,3,4)]
colnames(bnd)<-c("Chr","X","Y",'denesity')

#-----plot--------------

#gene
col_fun1 <- colorRamp2(seq(min(gene$denesity), max(gene$denesity), length.out = 2), c("white" ,"#2a2a2a"))
circos.genomicHeatmap(gene, heatmap_height=0.05,na_col = "grey",connection_height = NULL,numeric.column ='denesity',col=col_fun1)
#ins
col_fun2 <- colorRamp2(seq(min(ins$denesity), max(ins$denesity), length.out = 2), c("white" ,"#8667c2"))
circos.genomicHeatmap(ins,  heatmap_height=0.08,na_col = "grey",connection_height = NULL,numeric.column ='denesity',col=col_fun2)
#del
col_fun3 <- colorRamp2(seq(min(del$denesity), max(del$denesity), length.out = 2), c("white" ,"#a02632"))
circos.genomicHeatmap(del, heatmap_height=0.08,na_col = "grey",connection_height = NULL,numeric.column ='denesity',col=col_fun3)
#dup
col_fun4 <- colorRamp2(seq(min(dup$denesity), max(dup$denesity), length.out = 2), c("white" ,"#4e7aeb"))
circos.genomicHeatmap(dup,heatmap_height=0.08, na_col = "grey",connection_height = NULL,numeric.column ='denesity',col=col_fun4)
#bnd
col_fun5 <- colorRamp2(seq(min(bnd$denesity), max(bnd$denesity), length.out = 2), c("white" ,"#ea8b20"))
circos.genomicHeatmap(bnd,heatmap_height=0.08, na_col = "grey",connection_height = NULL,numeric.column ='denesity',col=col_fun5)
#inv
col_fun6 <- colorRamp2(seq(min(inv$denesity), max(inv$denesity), length.out = 2), c("white" ,"#666245"))
circos.genomicHeatmap(inv, heatmap_height=0.08,na_col = "grey",connection_height = NULL,numeric.column ='denesity',col=col_fun6)

#--------legent-----
lgd1 = Legend(col_fun = col_fun1,title="Gene",at =c(0,216))
draw(lgd1,x = unit(0.9,"npc"), y = unit(0.8,"npc"),just = c("left","top"))
lgd2 = Legend(col_fun = col_fun2,title="INS",at =c(0,216))
draw(lgd2,x = unit(0.9,"npc"), y = unit(0.8,"npc"),just = c("right","top"))
lgd3 = Legend(col_fun = col_fun3,title="DEL",at =c(0,130))
draw(lgd3,x = unit(0.9,"npc"), y = unit(0.8,"npc"),just = c("left","top"))
lgd4 = Legend(col_fun = col_fun4,title="DUP",at =c(0,46))
draw(lgd4,x = unit(0.9,"npc"), y = unit(0.8,"npc"),just = c("right","top"))
lgd5 = Legend(col_fun = col_fun5,title="BND",at =c(0,407))
draw(lgd5,x = unit(0.9,"npc"), y = unit(0.8,"npc"),just = c("left","top"))
lgd6 = Legend(col_fun = col_fun6,title="INV",at =c(0,47))
draw(lgd6,x = unit(0.9,"npc"), y = unit(0.8,"npc"),just = c("right","top"))

circos.clear()
